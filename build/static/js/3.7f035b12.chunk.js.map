{"version":3,"sources":["components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js"],"names":["module","exports","Input","Label","InputElement","Invalid","CheckoutSummary","ContactData","checkoutSummary","props","react_default","a","createElement","className","classes","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinue","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","require","valid","touched","street","zip","minLength","maxLength","country","email","time","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","toFixed","orderData","userId","onOrderBurger","token","inputChangeHandler","inputIdentifier","updateFormElement","updateObject","target","checkValidity","updatedOrderForm","Object","defineProperty","setState","_this2","this","formElementsArray","key","push","id","config","form","onSubmit","map","formElement","changed","invalid","shouldValidate","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinueHandler","replace","summary","react_router","to","purchasedRedirect","purchased","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","assign","onChange","join","option","label"],"mappings":"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","file":"static/js/3.7f035b12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\n\nconst checkoutSummary = (props) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1> We hope it tastes well!</h1>\n      <div style={{ width: '100%', margin: 'auto' }}>\n        <Burger ingredients={props.ingredients}/>\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled} >Cancel</Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinue}>Continue</Button>\n    </div>\n  )\n};\n\nexport default checkoutSummary;","import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-order';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux'\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandles';\nimport * as actions from '../../../store/actions/index';\nimport {updateObject, checkValidity } from '../../../shared/utility'\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Name'\n        },\n        value: '',\n        validation: {\n          require: true\n        },\n        valid: false,\n        touched: false\n      },\n\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Street'\n        },\n        value: '',\n        validation: {\n          require: true\n        },\n        valid: false,\n        touched: false\n      },\n      zip: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Zip code'\n        },\n        value: '',\n        validation: {\n          require: true,\n          minLength: 5,\n          maxLength: 10\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Country'\n        },\n        value: '',\n        validation: {\n          require: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your email'\n        },\n        value: '',\n        validation: {\n          require: true\n        },\n        valid: false,\n        touched: false\n      },\n      time: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{ value: 'fastest', displayValue: 'Fastest' }, { value: 'cheapest', displayValue: 'Cheapest' }]\n        },\n        value: 'fastest',\n        valid: true\n      }\n    },\n    formIsValid: false\n  }\n\n  orderHandler = (event) => {\n    event.preventDefault();\n\n    const formData = {}\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price.toFixed(2),\n      orderData: formData,\n      userId: this.props.userId\n    }\n\n    this.props.onOrderBurger(order, this.props.token)\n  }\n \n\n  inputChangeHandler = (event, inputIdentifier) => {\n   \n    const updateFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n      value: event.target.value,\n      valid: checkValidity(event.target.value, this.state.validation),\n      touched: true\n    });\n    const updatedOrderForm = updateObject(this.state.orderForm, {\n      [inputIdentifier]: updateFormElement\n    })\n    updatedOrderForm[inputIdentifier] = updateFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n    }\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid })\n\n  }\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      })\n    }\n    let form = (<form onSubmit={this.orderHandler}>\n      {formElementsArray.map(formElement => (<Input key={formElement.id} elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig} value={formElement.config.value} changed={(event) => this.inputChangeHandler(event, formElement.id)} invalid={!formElement.config.valid} shouldValidate={formElement.config.validation}\n        touched={formElement.config.touched} />))}\n      <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\n    </form>);\n    if (this.props.loading) {\n      form = <Spinner />\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter Your COntact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import * as actions from '../../store/actions/index';\n\n\nclass Checkout extends Component {\n\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack()\n  }\n\n  checkoutContinueHandler = () => {\n    this.props.history.replace('/checkout/contact-data')\n  }\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    \n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n      summary = <div>\n        {purchasedRedirect}<CheckoutSummary ingredients={this.props.ings} checkoutCancelled={this.checkoutCancelledHandler} checkoutContinue={this.checkoutContinueHandler} /><Route path={this.props.match.path + '/contact-data'} component={ContactData} /> </div>\n    }\n    return summary;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  }\n};\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n\n  if (props.invalid && props.shouldValidate && props.touched  ) {\n    inputClasses.push(classes.Invalid)\n  }\n\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} />\n      break;\n    case ('textarea'):\n      inputElement = <textarea onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} />\n      break;\n    case ('select'):\n      inputElement = (\n        <select onChange={props.changed} className={inputClasses.join(' ')} value={props.value} >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>{option.displayValue}</option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} />\n  }\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  )\n};\n\nexport default input;"],"sourceRoot":""}